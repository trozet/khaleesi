---
- name: Install DNS Server
  yum: pkg={{item}} state=present
  retries: 3
  delay: 30
  with_items:
    - bind
    - bind-utils

- name: Install dhcpd
  yum: name=dhcp state=present
  retries: 3
  delay: 30
  register: dhcpd_result
  until: dhcpd_result.rc == 0

- name: Install augeas
  yum: name=augeas state=present
  retries: 3
  delay: 30
  register: aug_result
  until: aug_result.rc == 0

- name: Install Ruby SCL
  template: src=ruby-scl.repo.j2 dest=/etc/yum.repos.d/ruby-scl.repo owner=root group=root mode=644

- name: Install puppet repo
  yum: name=http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm state=present
  retries: 3
  delay: 30
  register: pup_result

- name: Install foreman-installer repo rpm
  yum: name=http://yum.theforeman.org/releases/1.7/el7/x86_64/foreman-release.rpm state=present
  retries: 3
  delay: 30
  register: ofi_result
  until: ofi_result.rc == 0

- name: Install foreman-installer
  yum: name=foreman-installer state=present
  retries: 3
  delay: 30
  register: foremani_result
  until: foremani_result.rc == 0


- name: Install OpenStack Puppet Modules
  yum: name=https://repos.fedorapeople.org/repos/openstack/openstack-juno/epel-7/openstack-puppet-modules-2014.2.8-1.el7.centos.noarch.rpm state=present
  retries: 3
  delay: 30
  register: ofm_result
  until: ofm_result.rc == 0

- name: Get astapor repo
  git: repo={{ astapor_repo }}
       dest={{ astapor_dest }}
       version={{ astapor_branch }}
       force=yes

- name: Set hostname
  hostname: name=foreman-server.{{ domain_name }}

- name: Make /etc/hosts proper
  lineinfile: "dest=/etc/hosts regexp='.*foreman-server.*$' line='{{ hostvars['localhost'].ansible_default_ipv4.address }} foreman-server.{{ domain_name }} foreman-server' state=present"

- name: Deactivate firewalld
  service: name=firewalld enabled=no state=stopped
  tags:
    - firewalld

- name: Make passwords the same for foreman environment
  replace: >
    dest={{ astapor_dest }}/bin/seeds.rb
    regexp='SecureRandom\.hex'
    replace='"redhat"'

- name: Fix seed values
  lineinfile: >
    dest={{ astapor_dest }}/bin/seeds.rb
    regexp="^(.*\"{{ item.name }}\"[ ]*=> )([\"']){{ item.oldvalue }}([\"']),"
    line="\1\g<2>{{ item.newvalue }}\g<3>,"
    backrefs=yes
    state=present
  with_items: foreman.seed_values

- name: Remove the prompt in foreman_server.sh
  lineinfile: >
    dest={{ astapor_dest }}/bin/foreman_server.sh
    regexp='^read .*'
    state=absent

- name: Remove 'include passenger' line from foreman_server.sh
  lineinfile: >
    dest={{ astapor_dest }}/bin/foreman_server.sh
    regexp='^include passenger'
    state=absent

- name: Check if foreman dir exists and permissions
  file: path=/usr/share/foreman
        state=directory
        mode=0755
  sudo: yes

- name: Create OPNFV modules directory
  file: path=/usr/share/opnfv/modules
        state=directory
        mode=0755
  sudo: yes

- name: Copy OPNFV modules
  local_action: synchronize src=/vagrant/puppet-opnfv/ dest=/usr/share/opnfv/modules/opnfv/ recursive=yes

- name: Clone OpenDaylight module
  git:  repo=https://github.com/dfarrell07/puppet-opendaylight.git
        dest=/usr/share/opnfv/modules/opendaylight/
        clone=yes
        version=1.1.0

- name: Clone wait for module
  git:  repo=https://github.com/basti1302/puppet-wait-for.git
        dest=/usr/share/opnfv/modules/wait-for
        clone=yes

- name: Clone Ceph module
  git:  repo=https://github.com/stackforge/puppet-ceph.git
        dest=/usr/share/opnfv/modules/ceph
        clone=yes

- name: Clone NTP module
  command: /usr/bin/puppet module install puppetlabs-ntp
  register: ntp_result
  failed_when: (ntp_result.rc != 0)

- name: Run the installer
  shell: >
    chdir={{ astapor_dest }}/bin
    creates=/tmp/foreman_client.sh
    bash -x ./foreman_server.sh
  register: installer_run
  environment:
    FOREMAN_GATEWAY: "{{ default_gw }}"
    FOREMAN_PROVISIONING: "true"
    PROVISIONING_INTERFACE: "enp0s8"
  tags:
    - foreman_install

- name: Installer stdout
  debug: var=installer_run.stdout_lines

- name: Fetch the client installer
  fetch: src=/tmp/foreman_client.sh dest=/tmp/foreman
  tags:
    - fetch_client_script

- name: reset and fetch password
  command: foreman-rake permissions:reset
  register: foreman_password_reset

- name: parse password from credentials
  shell:  'sed -E "s/Reset to user:[ ]?+admin, password:[ ]?+(.*)/\1/" <<< "{{ foreman_password_reset.stdout }}"'
  register: foreman_parse_password

- name: set foreman admin password as fact
  set_fact: foreman_admin_password={{foreman_parse_password.stdout }}

- name: Set resolv.conf
  template: src=resolv_conf.j2 dest=/etc/resolv.conf owner=root group=root mode=0644

- name: Disable hiera in puppet
  lineinfile: >
    dest=/etc/puppet/puppet.conf
    line='    data_binding_terminus = none'
    state=present

- name: Install hammer plugin
  yum: name=rubygem-hammer_cli_foreman state=present
  retries: 3
  delay: 30
  register: aug_result
  until: aug_result.rc == 0

- name: Change Foreman password to one provided in ksgen settings
  command: /usr/bin/hammer -u admin -p {{ foreman_admin_password }} user update --login admin --password {{ provisioner.password }}

- name: Set new Foreman password as fact
  set_fact: foreman_admin_password={{ provisioner.password }}

- name: Hammer global parameters
  command: /usr/bin/hammer -u admin -p {{ foreman_admin_password }} global-parameter set --name {{item.key}} --value {{item.value}}
  register: param_result
  failed_when: (param_result.rc != 0) and (param_result.rc != 65)
  with_dict: global_params

- name: Restart Foreman
  service: name=foreman enabled=yes state=restarted

- name: Restart Foreman-Proxy
  service: name=foreman-proxy enabled=yes state=restarted

- name: Restart httpd
  service: name=httpd enabled=yes state=restarted

- name: Restart puppet
  service: name=puppet enabled=yes state=restarted

- name: Add Private Controller DHCP Entries
  template: src=dhcp_hosts.j2 dest=/etc/dhcp/dhcpd.hosts owner=root group=root mode=0644
  when: network_type != "single_network"

- name: Add Listening Interfaces to DHCP sysconfig
  template: src=dhcp_interfaces.j2 dest=/etc/sysconfig/dhcpd owner=root group=root mode=0644
  when: network_type != "single_network"

- name: Add Include Directive to dhcpd.conf
  lineinfile: >
       dest=/etc/dhcp/dhcpd.conf
       line='include "/etc/dhcp/dhcpd.extra";'
       state=present
  when: network_type != "single_network"

- name: Add DHCP Subnet Config
  template: src=dhcp_extra_subnets.j2 dest=/etc/dhcp/dhcpd.extra owner=root group=root mode=0644
  when: network_type != "single_network"

- name: Restart dhcpd
  service: name=dhcpd enabled=yes state=restarted

- name: Ensure tftp socket
  service: name=tftp.socket enabled=yes state=started

- name: Ensure tftp service
  service: name=tftp.service enabled=yes state=started

- name: Restart DNS service
  service: name=named enabled=yes state=restarted

- name: Create BareMetal Hosts in Foreman
  command: /usr/bin/hammer -u admin -p {{ foreman_admin_password }} host create --name {{item.value.short_name}} --hostgroup {{item.value.hostgroup}}
           --root-password {{item.value.ansible_ssh_pass}} --managed true --mac {{item.value.mac_address}}
           --interface type=Nic::BMC,ip={{item.value.bmc_ip}},mac={{item.value.bmc_mac}},username={{item.value.bmc_user}},password={{item.value.bmc_pass}},provider=IPMI
           --architecture x86_64 --medium "CentOS 7 mirror" --ptable "OpenStack Disk Layout"
  when: ((item.value.host_type == 'baremetal') or (hosts_created is defined)) and ((no_dhcp is not defined) or (not no_dhcp))
  with_dict: nodes
  retries: 3
  delay: 30
  register: bare_host_result
  until: bare_host_result.rc == 0
  args:
    creates: /tmp/hostcreate.lock

- name: Create BareMetal Static Hosts in Foreman
  command: /usr/bin/hammer -u admin -p {{ foreman_admin_password }} host create --name {{item.value.short_name}} --hostgroup {{item.value.hostgroup}}
           --root-password {{item.value.ansible_ssh_pass}} --managed true --mac {{item.value.mac_address}}
           --interface type=Nic::BMC,ip={{item.value.bmc_ip}},mac={{item.value.bmc_mac}},username={{item.value.bmc_user}},password={{item.value.bmc_pass}},provider=IPMI
           --architecture x86_64 --medium "CentOS 7 mirror" --ptable "OpenStack Disk Layout" --ip {{item.value.admin_ip}}
  when: ((item.value.host_type == 'baremetal') or (hosts_created is defined)) and no_dhcp
  with_dict: nodes
  retries: 3
  delay: 30
  register: bare_host_result
  until: bare_host_result.rc == 0
  args:
    creates: /tmp/hostcreate.lock


- name: Baremetal Host Create Lock
  command: /usr/bin/touch /tmp/hostcreate.lock
  args:
    creates: /tmp/hostcreate.lock
  when: (bare_host_result is defined) and (bare_host_result.rc == 0)

- name: Download vmlinuz
  get_url: url=http://mirror.centos.org/centos/7/os/x86_64/images/pxeboot/vmlinuz
           dest=/var/lib/tftpboot/boot/CentOS-7-x86_64-vmlinuz
           mode=644
           force=yes
           timeout=60

- name: Download initrd
  get_url: url=http://mirror.centos.org/centos/7/os/x86_64/images/pxeboot/initrd.img
           dest=/var/lib/tftpboot/boot/CentOS-7-x86_64-initrd.img
           mode=644
           force=yes
           timeout=120
